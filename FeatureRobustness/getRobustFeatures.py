"""
This script calculates the robust features according to several calculated
metrics of robustness.

INPUT: Path to folder containing perturbation experiments, which contain CSV 
files with robustness metric values for each feature (as generated by 
getRobustnessMetrics.py). Thresholds for robustness are specified for each 
metric in the beginning of the script.

Additionally, input the path to the folder for the original feature extraction
experiment (non-perturbed images), to additionally filter out features with 
null values or zero variance.

OUTPUT: CSV files containing a list of features under each column, where each 
column name denotes the metrics used to select those features. Files will be 
saved under the experiment folder for each perturbation experiment analyzed.

The metrics applied include:
    No Metrics (i.e. Unfiltered)
    MFR and SDFR (+ Pearson)
    CMFR and CSDFR (+ Pearson)
    nRoA and Normalized Bias
    CCC
    ICC
    All Metrics (Intersection)

Written by Abbas Shaikh, Summer 2023
"""

import os
import pandas as pd
import numpy as np
from functools import reduce

# Paths
originalPath = "D:\BAP1\Experiments\FeatureExtraction\FullFeatureExtraction"
perturbationExperiments = "D:\BAP1\Experiments\FeatureRobustness"

# Thresholds
thresholds = {
    "MFR": [0.8, 1.2],
    "SDFR": 0.2,
    "Pearson": 0.7,
    "Pearson P-value": 0.05,
    "CMFR": 0.2,
    "CSDFR": 0.2,
    "nRoA": 0.05,
    "Bias": [-0.05, 0.05],
    "CCC": 0.9,
    "ICC": 0.9
    }

### Preprocessing

# Load original features
originalFeatures = pd.read_csv(os.path.join(originalPath, "features.csv")).drop(columns = "Case")

# Get features with zero variance (within tolerance)
tol = 1e-10
zeroVar = originalFeatures.var() < tol
zeroVar = zeroVar[zeroVar].index

# Get features with null values
nullVal = originalFeatures.isna().any(axis = 0)
nullVal = nullVal[nullVal].index

toDrop = zeroVar.union(nullVal)

# Iterate over perturbation experiments
for subdir, dirs, files in os.walk(perturbationExperiments):
    for expDir in dirs:
        
        print("Experiment:", expDir)

        # Loading robustness metrics, converting all infinite values to null
        robustnessMetrics = pd.read_csv(os.path.join(subdir, expDir, "robustnessMetrics.csv"))
        robustnessMetrics.replace([np.inf, -np.inf], np.nan, inplace=True)
        
        # Remove features with null values or zero variance and all shape features
        robustnessMetrics = robustnessMetrics[~(robustnessMetrics["Feature"].isin(toDrop) | robustnessMetrics["Feature"].str.contains("shape2D"))]
        
        ### MFR and SDFR Robust Features ###
        subset_MFR_SDFR = robustnessMetrics["Feature"][
            (thresholds["MFR"][0] < robustnessMetrics["MFR"]) & (robustnessMetrics["MFR"] < thresholds["MFR"][1]) &
            (robustnessMetrics["SDFR"] < thresholds["SDFR"]) & 
            (robustnessMetrics["Pearson"] > thresholds["Pearson"]) &
            (robustnessMetrics["Pearson_pval"] < thresholds["Pearson P-value"])
            ]
        
        print("MFR, SDFR, and Pearson (" + str(thresholds["MFR"][0]) + " < MFR < " + str(thresholds["MFR"][1]) + \
              " and SDFR < " + str(thresholds["SDFR"]) + " and Pearson > " + str(thresholds["Pearson"]) + \
              " with p < " + str(thresholds["Pearson P-value"]) +"):", 
              len(subset_MFR_SDFR),
              "Features")
        
            
        ### CMFR and CSDFR Robust Features ###
        subset_CMFR_CSDFR = robustnessMetrics["Feature"][
            (robustnessMetrics["CMFR"] < thresholds["CMFR"]) &
            (robustnessMetrics["CSDFR"] < thresholds["CSDFR"]) & 
            (robustnessMetrics["Pearson"] > thresholds["Pearson"]) &
            (robustnessMetrics["Pearson_pval"] < thresholds["Pearson P-value"])
            ]
        
        print("CMFR, CSDFR, and Pearson (CMFR < " + str(thresholds["CMFR"]) + \
              " and CSDFR < " + str(thresholds["CSDFR"]) + " and Pearson > " + str(thresholds["Pearson"]) + \
              " with p < " + str(thresholds["Pearson P-value"]) +"):", 
              len(subset_CMFR_CSDFR),
              "Features")
        
            
        ### nRoA and Bias Robust Features ###
        subset_nRoA_Bias = robustnessMetrics["Feature"][(
            robustnessMetrics["nRoA"] < thresholds["nRoA"]) & 
            (thresholds["Bias"][0] < robustnessMetrics["Bias"]) & (robustnessMetrics["Bias"] < thresholds["Bias"][1])
            ]
        
        print("nROA and Normalized Bias (nROA < " + str(thresholds["nRoA"]) + " and " + \
              str(thresholds["Bias"][0]) + " < Bias < " + str(thresholds["Bias"][1]) + "):", 
              len(subset_nRoA_Bias),
              "Features")
        
            
        ### CCC Robust Features ###
        subset_CCC = robustnessMetrics["Feature"][robustnessMetrics["CCC"] > thresholds["CCC"]]
        print("CCC (Threshold = " + str(thresholds["CCC"]) + "):", len(subset_CCC), "Features")
        
        ### ICC2 Robust Features ###
        subset_ICC1 = robustnessMetrics["Feature"][robustnessMetrics["ICC1"] > thresholds["ICC"]]
        print("ICC(1, 1) (Threshold = " + str(thresholds["ICC"]) + "):", len(subset_ICC1), "Features")
        
        ### ICC2 Robust Features ###
        subset_ICC2 = robustnessMetrics["Feature"][robustnessMetrics["ICC2"] > thresholds["ICC"]]
        print("ICC(2, 1) (Threshold = " + str(thresholds["ICC"]) + "):", len(subset_ICC2), "Features")
        
        ### ICC Robust Features ###
        subset_ICC3 = robustnessMetrics["Feature"][robustnessMetrics["ICC3"] > thresholds["ICC"]]
        print("ICC(3, 1) (Threshold = " + str(thresholds["ICC"]) + "):", len(subset_ICC3), "Features")
        
        ### All Metrics Robust Features ###
        combineSubsets = [subset_MFR_SDFR,
                          subset_CMFR_CSDFR,
                          subset_nRoA_Bias,
                          subset_CCC,
                          subset_ICC2,
                          ]
        
        merged = reduce(lambda left, right: pd.merge(left, right, on = 'Feature', how = 'inner'), combineSubsets)["Feature"]
    
        print("All Metrics: ", len(merged), "Features")
        print()
        
        ### Save to CSV ###
        robustFeatures = pd.concat([
            robustnessMetrics["Feature"].reset_index(drop = True),
            subset_MFR_SDFR.reset_index(drop = True),
            subset_CMFR_CSDFR.reset_index(drop = True),
            subset_nRoA_Bias.reset_index(drop = True),
            subset_CCC.reset_index(drop = True),
            subset_ICC1.reset_index(drop = True),
            subset_ICC2.reset_index(drop = True),
            subset_ICC3.reset_index(drop = True),
            merged.reset_index(drop = True)
            ], axis = 1)
        
        robustFeatures.columns = ["No Metrics", "MFR-SDFR", "CMFR-CSDFR", "nRoA-Bias", "CCC", "ICC1", "ICC2", "ICC3", "All Metrics"]
        robustFeatures.to_csv(os.path.join(subdir, expDir, "robustFeatures.csv"))